#!/usr/bin/perl

$num_args = $#ARGV + 1;
if ($num_args != 3) {
    print "Usage: db-transfer src_path dest_path database_name\n";
        exit;
}

local $/=undef;
open FILE, $ARGV[0] or die "Couldn't open file: $!";
$source = <FILE>;
close FILE;

local $/=undef;
open FILE, $ARGV[1] or die "Couldn't open file: $!";
$dest= <FILE>;
close FILE;

$dbName = $ARGV[2];


#print "Source: \n$source\n";
#print "Destination\n$dest\n";
#print "DB Name:\n$dbName\n";

my @srcLines = split /\n/, $source;
my @destLines = split /\n/, $dest;

my $linesToAdd;
my $dbFound = 0;
my $addText = 0;

foreach my $srcLine (@srcLines) {
  #Read db-name
  if($srcLine =~ /<database-name>$dbName<\/database-name>/) {
    $dbFound=1;
  }
  if(($dbFound) && (($srcLine =~ /<\/forests>/) || \
                    ($srcLine =~ /<forests\/>/))) {
    $addText=1;
  }
  if($addText) {
    $linesToAdd .= $srcLine;
    $linesToAdd .= "\n";
  }
  if(($addText) && ($srcLine =~ /<\/database>/)) {
    $addText = 0;
  }
}

foreach my $destLine (@destLines) {
}

print $linesToAdd;


# database.xml -- specify the full path

# Read in support dump <database>{db-name}</database>

# Read in database.xml -- 
# Where <database>{db-name}
# Might need to check for an XML library

# OR

# Parse $database and save full database
# When hit </database> look for <database-name>{name}</database-name>

# if FOUND in destination DB then that's the one to not include 
# if FOUND in source DB then keep that. 

# Need to consider only keeping after </forests>

# Abort if db isn't found in either, Can have that as initial check

# How to handle inputs -- <src file> <destination file> <database name>
# Can use parameters, not sure if necessary -- can add later
